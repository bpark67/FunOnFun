[{"path":"https://bpark67.github.io/FunOnFun/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 FunOnFun authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":[]},{"path":"https://bpark67.github.io/FunOnFun/articles/Simulated_Data_Analysis.html","id":"covariates","dir":"Articles","previous_headings":"Simulate Data","what":"Covariates","title":"Simulated_Data_Analysis","text":"","code":"library(FunOnFun) library(fdapace) library(ggplot2)  t = seq(0, 1, length.out = 100)  n = 199  components = 3  mean_funs = list(   function(t) -2*(t-0.5)^2 + 5,   function(t) 3*(t-0.75)^3 - 5   )  eigen_funs_list = list(   list(     function(t) sin(2*pi*t),     function(t) sin(4*pi*t),     function(t) sin(6*pi*t)   ),   list(     function(t) cos(3*pi*t),     function(t) cos(pi*t),     function(t) cos(5*pi*t)   ) )  lambdas = c(5, 3, 1)  X = FunOnFun::simMFPCA(16, t, n, 3, mean_funs, eigen_funs_list, lambdas, response = FALSE)"},{"path":"https://bpark67.github.io/FunOnFun/articles/Simulated_Data_Analysis.html","id":"response","dir":"Articles","previous_headings":"Simulate Data","what":"Response","title":"Simulated_Data_Analysis","text":"","code":"mean_funs = list(   function(t) 6*exp(-(t-1)^2),   function(t) -2*14^(t-0.5) )  eigen_funs_list = list(   list(     function(t) cos(9*pi*t),     function(t) cos(5*pi*t),     function(t) cos(2*pi*t)   ),   list(     function(t) sin(3*pi*t),     function(t) sin(5*pi*t),     function(t) sin(7*pi*t)   ) )  B = matrix(c(-1, 2, 3, -1, 1, 3, 5, 5, -3),            nrow = components,            ncol = components)  # B = diag(c(3, 3, 3))  Y = FunOnFun::simMFPCA(16, t, n, 3, mean_funs, eigen_funs_list, lambdas, response = TRUE, B = B) sigma = 0.001 E = matrix(rnorm(2*length(t)*n, mean = 0, sd = sigma), n, 2*length(t))  Y$X = Y$X + E"},{"path":"https://bpark67.github.io/FunOnFun/articles/Simulated_Data_Analysis.html","id":"plot-simulated-data","dir":"Articles","previous_headings":"","what":"Plot Simulated Data","title":"Simulated_Data_Analysis","text":"","code":"matplot(t(X$X),          type='l',          ylab='X(t)',          xlab='time',          main='Plot of predictor curves',          col=rgb(0,0,0,alpha=0.4)) matlines(apply(t(X$X), 1, mean),          type='l',          lwd=3,          lty=1,          col=\"red\") matplot(t(Y$X),          type='l',          ylab='Y(t)',          xlab='time',          main='Plot of response curves',          col=rgb(0,0,0,alpha=0.6)) matlines(apply(t(Y$X), 1, mean),          type='l',          lwd=3,          lty=1,          col = \"red\")"},{"path":"https://bpark67.github.io/FunOnFun/articles/Simulated_Data_Analysis.html","id":"simulate-missingness","dir":"Articles","previous_headings":"","what":"Simulate Missingness","title":"Simulated_Data_Analysis","text":"","code":"X_miss = FunOnFun::simMiss(99, X$X, t, seed = 51) Y_miss = FunOnFun::simMiss(99, Y$X, t, seed = 51)"},{"path":"https://bpark67.github.io/FunOnFun/articles/Simulated_Data_Analysis.html","id":"fpca","dir":"Articles","previous_headings":"","what":"FPCA","title":"Simulated_Data_Analysis","text":"","code":"df = X_miss %>% FunOnFun::tibbleFormat(t) %>% FunOnFun::fpcaFormat(id_col = \"id\") df_Y = Y_miss %>% FunOnFun::tibbleFormat(t) %>% FunOnFun::fpcaFormat(id_col = \"id\") res_X1 = fdapace::FPCA(df$Variable1,                        df$Time,                        list(dataType = \"Sparse\",                             error = F,                             kernel = \"epan\",                             verbose = F,                             nRegGrid = length(t)))  res_X2 = fdapace::FPCA(df$Variable2,                        df$Time,                        list(dataType = \"Sparse\",                             error = F,                             kernel = \"epan\",                             verbose = F,                             nRegGrid = length(t)))  res_Y1 = fdapace::FPCA(df_Y$Variable1,                        df_Y$Time,                        list(dataType = \"Sparse\",                             error = T,                             kernel = \"epan\",                             verbose = F,                             nRegGrid = length(t))) res_Y2 = fdapace::FPCA(df_Y$Variable2,                        df_Y$Time,                        list(dataType = \"Sparse\",                             error = T,                             kernel = \"epan\",                             verbose = F,                             nRegGrid = length(t),                             methodSelectK = 3)) # TODO: CHECK THIS"},{"path":"https://bpark67.github.io/FunOnFun/articles/Simulated_Data_Analysis.html","id":"visualize-fpca","dir":"Articles","previous_headings":"","what":"Visualize FPCA","title":"Simulated_Data_Analysis","text":"","code":"act = data.frame(act1 = Y$mu[1:100],                  act2 = Y$mu[101:200]) hat = data.frame(hat1 = res_Y1$mu,                  hat2 = res_Y2$mu)  hat %>%   ggplot() +   geom_line(aes(x = seq(0, 1, length.out = 100), y = hat1)) +   geom_line(data = act, aes(x = seq(0, 1, length.out = 100), y = act1), linetype = \"dashed\") +   theme_bw() hat %>%   ggplot() +   geom_line(aes(x = seq(0, 1, length.out = 100), y = hat2)) +   geom_line(data = act, aes(x = seq(0, 1, length.out = 100), y = act2), linetype = \"dashed\") +   theme_bw() phi_X2_df = Y$phi[101:200,] %>% as.data.frame()  res_Y2$phi[, 1:3] %>%   as.data.frame() %>%   ggplot() +   geom_line(aes(x = t, y = V1), col = \"red\") +   geom_line(data = phi_X2_df, aes(x = t, y = V1), col = \"red\", linetype = \"dashed\") +   theme_bw() res_Y2$phi[, 1:3] %>%   as.data.frame() %>%   ggplot() +   geom_line(aes(x = t, y = V2), col = \"red\") +   geom_line(data = phi_X2_df, aes(x = t, y = V2), col = \"red\", linetype = \"dashed\") +   theme_bw() res_Y2$phi[, 1:3] %>%   as.data.frame() %>%   ggplot() +   geom_line(aes(x = t, y = V3), col = \"red\") +   geom_line(data = phi_X2_df, aes(x = t, y = V3), col = \"red\", linetype = \"dashed\") +   theme_bw()"},{"path":"https://bpark67.github.io/FunOnFun/articles/Simulated_Data_Analysis.html","id":"irregular-mfpca","dir":"Articles","previous_headings":"","what":"Irregular MFPCA","title":"Simulated_Data_Analysis","text":"","code":"res = FunOnFun::irregMFPCA(components = 3,                            split = T,                            res_X1,                            res_X2)  res_Y = FunOnFun::irregMFPCA(components = 3,                              split = T,                              res_Y1,                              res_Y2)"},{"path":"https://bpark67.github.io/FunOnFun/articles/Simulated_Data_Analysis.html","id":"check-results","dir":"Articles","previous_headings":"Irregular MFPCA","what":"Check results","title":"Simulated_Data_Analysis","text":"","code":"eigenf = res$unstacked_phi colnames(eigenf) = c(\"var_1_1\", \"var_1_2\", \"var_1_3\", \"var_2_1\", \"var_2_2\", \"var_2_3\") eigens = res$xi colnames(eigens) = c(\"comp_1\", \"comp_2\", \"comp_3\") eigenf %>%   as.data.frame() %>%   ggplot() +   geom_line(aes(x = seq(0, 1, length.out = 100), y = var_1_1), col = \"red\") +   geom_line(aes(x = seq(0, 1, length.out = 100), y = X$phi[1:100, 1]), col = \"black\", linetype = \"dotted\") +   theme_bw() eigenf %>%   as.data.frame() %>%   ggplot() +   geom_line(aes(x = seq(0, 1, length.out = 100), y = -var_1_2), col = \"red\") +   geom_line(aes(x = seq(0, 1, length.out = 100), y = X$phi[1:100, 2]), col = \"black\", linetype = \"dotted\") +   theme_bw() eigenf %>%   as.data.frame() %>%   ggplot() +   geom_line(aes(x = seq(0, 1, length.out = 100), y = -var_1_3), col = \"red\") +   geom_line(aes(x = seq(0, 1, length.out = 100), y = X$phi[1:100, 3]), col = \"black\", linetype = \"dotted\") +   theme_bw() eigenf %>%   as.data.frame() %>%   ggplot() +   geom_line(aes(x = seq(0, 1, length.out = 100), y = var_2_1), col = \"red\") +   geom_line(aes(x = seq(0, 1, length.out = 100), y = X$phi[101:200, 1]), col = \"black\", linetype = \"dotted\") +   theme_bw() eigenf %>%   as.data.frame() %>%   ggplot() +   geom_line(aes(x = seq(0, 1, length.out = 100), y = -var_2_2), col = \"red\") +   geom_line(aes(x = seq(0, 1, length.out = 100), y = X$phi[101:200, 2]), col = \"black\", linetype = \"dotted\") +   theme_bw() eigenf %>%   as.data.frame() %>%   ggplot() +   geom_line(aes(x = seq(0, 1, length.out = 100), y = -var_2_3), col = \"red\") +   geom_line(aes(x = seq(0, 1, length.out = 100), y = X$phi[101:200, 3]), col = \"black\", linetype = \"dotted\") +   theme_bw() eigens = data.frame(est1 = eigens[,1]/sqrt(res$Dhat[1,1]),                     est2 = eigens[,2]/sqrt(res$Dhat[2,2]),                     est3 = eigens[,3]/sqrt(res$Dhat[3,3]),                     act1 = X$xi[, 1],                     act2 = X$xi[, 2],                     act3 = X$xi[, 3])  eigens %>%   ggplot(aes(x = est1, y = act1)) +   geom_point() +   geom_abline(intercept = 0, slope = 1, col = \"red\") +   geom_smooth(method = \"lm\", se = F) +   theme_bw() #> `geom_smooth()` using formula = 'y ~ x' eigens %>%   ggplot(aes(x = -est2, y = act2)) +   geom_point() +   geom_abline(intercept = 0, slope = 1, col = \"red\") +   geom_smooth(method = \"lm\", se = F) +   theme_bw() #> `geom_smooth()` using formula = 'y ~ x' eigens %>%   ggplot(aes(x = -est3, y = act3)) +   geom_point() +   geom_abline(intercept = 0, slope = 1, col = \"red\") +   geom_smooth(method = \"lm\", se = F) +   theme_bw() #> `geom_smooth()` using formula = 'y ~ x' eigenf = res_Y$unstacked_phi colnames(eigenf) = c(\"var_1_1\", \"var_1_2\", \"var_1_3\", \"var_2_1\", \"var_2_2\", \"var_2_3\") eigens = res_Y$xi %>% sweep(2, sqrt(diag(res_Y$Dhat)), \"/\") colnames(eigens) = c(\"comp_1\", \"comp_2\", \"comp_3\") eigenf %>%   as.data.frame() %>%   ggplot() +   geom_line(aes(x = seq(0, 1, length.out = 100), y = var_1_1), col = \"red\") +   geom_line(aes(x = seq(0, 1, length.out = 100), y = Y$phi[1:100, 1]), col = \"black\", linetype = \"dotted\") +   theme_bw() eigenf %>%   as.data.frame() %>%   ggplot() +   geom_line(aes(x = seq(0, 1, length.out = 100), y = -var_1_2), col = \"red\") +   geom_line(aes(x = seq(0, 1, length.out = 100), y = Y$phi[1:100, 2]), col = \"black\", linetype = \"dotted\") +   theme_bw() eigenf %>%   as.data.frame() %>%   ggplot() +   geom_line(aes(x = seq(0, 1, length.out = 100), y = -var_1_3), col = \"red\") +   geom_line(aes(x = seq(0, 1, length.out = 100), y = Y$phi[1:100, 3]), col = \"black\", linetype = \"dotted\") +   theme_bw() eigenf %>%   as.data.frame() %>%   ggplot() +   geom_line(aes(x = seq(0, 1, length.out = 100), y = var_2_1), col = \"red\") +   geom_line(aes(x = seq(0, 1, length.out = 100), y = Y$phi[101:200, 1]), col = \"black\", linetype = \"dotted\") +   theme_bw() eigenf %>%   as.data.frame() %>%   ggplot() +   geom_line(aes(x = seq(0, 1, length.out = 100), y = -var_2_2), col = \"red\") +   geom_line(aes(x = seq(0, 1, length.out = 100), y = Y$phi[101:200, 2]), col = \"black\", linetype = \"dotted\") +   theme_bw() eigenf %>%   as.data.frame() %>%   ggplot() +   geom_line(aes(x = seq(0, 1, length.out = 100), y = -var_2_3), col = \"red\") +   geom_line(aes(x = seq(0, 1, length.out = 100), y = Y$phi[101:200, 3]), col = \"black\", linetype = \"dotted\") +   theme_bw() act = qr.Q(qr(Y$xi %*% B)) * sqrt(199)  eigens = data.frame(est1 = eigens[,1],                     est2 = eigens[,2],                     est3 = eigens[,3],                     act1 = -act[, 1],                     act2 = act[, 2],                     act3 = -act[, 3])  eigens %>%   ggplot(aes(x = est1, y = act1)) +   geom_point() +   geom_abline(intercept = 0, slope = 1, col = \"red\") +   geom_smooth(method = \"lm\", se = F) +   theme_bw() #> `geom_smooth()` using formula = 'y ~ x' eigens %>%   ggplot(aes(x = -est2, y = act2)) +   geom_point() +   geom_abline(intercept = 0, slope = 1, col = \"red\") +   geom_smooth(method = \"lm\", se = F) +   theme_bw() #> `geom_smooth()` using formula = 'y ~ x' eigens %>%   ggplot(aes(x = -est3, y = act3)) +   geom_point() +   geom_abline(intercept = 0, slope = 1, col = \"red\") +   geom_smooth(method = \"lm\", se = F) +   theme_bw() #> `geom_smooth()` using formula = 'y ~ x'"},{"path":"https://bpark67.github.io/FunOnFun/articles/Simulated_Data_Analysis.html","id":"regression","dir":"Articles","previous_headings":"","what":"Regression","title":"Simulated_Data_Analysis","text":"","code":"# response = res_Y$xi # predictor = res$xi  # Normalized Versions predictor = sweep(res$xi, 2, sqrt(diag(res$Dhat)), \"/\") response = sweep(res_Y$xi, 2, sqrt(diag(res_Y$Dhat)), \"/\")   mod = lm(response ~ -1 + predictor)  B; mod$coefficients #>      [,1] [,2] [,3] #> [1,]   -1   -1    5 #> [2,]    2    1    5 #> [3,]    3    3   -3 #>                  [,1]       [,2]       [,3] #> predictor1 -0.1747657 -0.6758188 -0.7154803 #> predictor2 -0.4557008  0.7001524 -0.5494227 #> predictor3 -0.8727301 -0.2302841  0.4299648 t(mod$coefficients) %*% mod$coefficients #>              [,1]          [,2]          [,3] #> [1,] 9.998641e-01  2.584728e-05  0.0001705220 #> [2,] 2.584728e-05  9.999752e-01 -0.0001586448 #> [3,] 1.705220e-04 -1.586448e-04  0.9986470741 Y$phi %*% B %*% t(X$phi) %>% heatmap(Rowv = NA, Colv = NA) res_Y$stacked_phi %*% mod$coefficients %*% t(res$stacked_phi) %>% heatmap(Rowv = NA, Colv = NA)"},{"path":"https://bpark67.github.io/FunOnFun/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Bumjun Park. Maintainer.","code":""},{"path":"https://bpark67.github.io/FunOnFun/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Park B (2024). FunOnFun: Conducts Function Function Regression Based Irregular MFPCA. R package version 0.1.0, https://bpark67.github.io/FunOnFun/.","code":"@Manual{,   title = {FunOnFun: Conducts Function on Function Regression Based on Irregular MFPCA},   author = {Bumjun Park},   year = {2024},   note = {R package version 0.1.0},   url = {https://bpark67.github.io/FunOnFun/}, }"},{"path":[]},{"path":"https://bpark67.github.io/FunOnFun/index.html","id":"purpose","dir":"","previous_headings":"","what":"Purpose","title":"Conducts Function on Function Regression Based on Irregular MFPCA","text":"package multivariate functional Principal Component Analysis (MFPCA) conducts function function regression MFPCA scores. URL GitHub URL Website","code":""},{"path":"https://bpark67.github.io/FunOnFun/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Conducts Function on Function Regression Based on Irregular MFPCA","text":"can install development version FunOnFun GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"bpark67/FunOnFun\")"},{"path":"https://bpark67.github.io/FunOnFun/index.html","id":"dependencies","dir":"","previous_headings":"","what":"Dependencies","title":"Conducts Function on Function Regression Based on Irregular MFPCA","text":"package depends magrittr, dplyr, purrr, tsibble, tibble, brolgar.","code":""},{"path":"https://bpark67.github.io/FunOnFun/index.html","id":"session-info","dir":"","previous_headings":"","what":"Session Info","title":"Conducts Function on Function Regression Based on Irregular MFPCA","text":"tool developed using following R session:","code":"devtools::session_info() #> ─ Session info ─────────────────────────────────────────────────────────────── #>  setting  value #>  version  R version 4.3.3 (2024-02-29) #>  os       macOS Sonoma 14.4.1 #>  system   x86_64, darwin20 #>  ui       X11 #>  language (EN) #>  collate  en_US.UTF-8 #>  ctype    en_US.UTF-8 #>  tz       America/Los_Angeles #>  date     2024-05-23 #>  pandoc   3.1.11 @ /Applications/RStudio.app/Contents/Resources/app/quarto/bin/tools/x86_64/ (via rmarkdown) #>  #> ─ Packages ─────────────────────────────────────────────────────────────────── #>  package     * version date (UTC) lib source #>  cachem        1.1.0   2024-05-16 [1] CRAN (R 4.3.3) #>  cli           3.6.2   2023-12-11 [1] CRAN (R 4.3.0) #>  devtools      2.4.5   2022-10-11 [1] CRAN (R 4.3.0) #>  digest        0.6.35  2024-03-11 [1] CRAN (R 4.3.2) #>  ellipsis      0.3.2   2021-04-29 [1] CRAN (R 4.3.0) #>  evaluate      0.23    2023-11-01 [1] CRAN (R 4.3.0) #>  fastmap       1.2.0   2024-05-15 [1] CRAN (R 4.3.3) #>  fs            1.6.4   2024-04-25 [1] CRAN (R 4.3.2) #>  glue          1.7.0   2024-01-09 [1] CRAN (R 4.3.0) #>  htmltools     0.5.8.1 2024-04-04 [1] CRAN (R 4.3.2) #>  htmlwidgets   1.6.4   2023-12-06 [1] CRAN (R 4.3.0) #>  httpuv        1.6.15  2024-03-26 [1] CRAN (R 4.3.2) #>  knitr         1.45    2023-10-30 [1] CRAN (R 4.3.0) #>  later         1.3.2   2023-12-06 [1] CRAN (R 4.3.0) #>  lifecycle     1.0.4   2023-11-07 [1] CRAN (R 4.3.0) #>  magrittr      2.0.3   2022-03-30 [1] CRAN (R 4.3.0) #>  memoise       2.0.1   2021-11-26 [1] CRAN (R 4.3.0) #>  mime          0.12    2021-09-28 [1] CRAN (R 4.3.0) #>  miniUI        0.1.1.1 2018-05-18 [1] CRAN (R 4.3.0) #>  pkgbuild      1.4.4   2024-03-17 [1] CRAN (R 4.3.2) #>  pkgload       1.3.4   2024-01-16 [1] CRAN (R 4.3.0) #>  profvis       0.3.8   2023-05-02 [1] CRAN (R 4.3.0) #>  promises      1.3.0   2024-04-05 [1] CRAN (R 4.3.2) #>  purrr         1.0.2   2023-08-10 [1] CRAN (R 4.3.0) #>  R6            2.5.1   2021-08-19 [1] CRAN (R 4.3.0) #>  Rcpp          1.0.12  2024-01-09 [1] CRAN (R 4.3.0) #>  remotes       2.5.0   2024-03-17 [1] CRAN (R 4.3.2) #>  rlang         1.1.3   2024-01-10 [1] CRAN (R 4.3.0) #>  rmarkdown     2.27    2024-05-17 [1] CRAN (R 4.3.3) #>  rstudioapi    0.16.0  2024-03-24 [1] CRAN (R 4.3.2) #>  sessioninfo   1.2.2   2021-12-06 [1] CRAN (R 4.3.0) #>  shiny         1.8.1.1 2024-04-02 [1] CRAN (R 4.3.2) #>  stringi       1.8.4   2024-05-06 [1] CRAN (R 4.3.2) #>  stringr       1.5.1   2023-11-14 [1] CRAN (R 4.3.0) #>  urlchecker    1.0.1   2021-11-30 [1] CRAN (R 4.3.0) #>  usethis       2.2.3   2024-02-19 [1] CRAN (R 4.3.2) #>  vctrs         0.6.5   2023-12-01 [1] CRAN (R 4.3.0) #>  xfun          0.44    2024-05-15 [1] CRAN (R 4.3.3) #>  xtable        1.8-4   2019-04-21 [1] CRAN (R 4.3.0) #>  yaml          2.3.8   2023-12-11 [1] CRAN (R 4.3.0) #>  #>  [1] /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/library #>  #> ──────────────────────────────────────────────────────────────────────────────"},{"path":"https://bpark67.github.io/FunOnFun/reference/dot-generate_mu.html","id":null,"dir":"Reference","previous_headings":"","what":"A function to generate mean functions for each variable — .generate_mu","title":"A function to generate mean functions for each variable — .generate_mu","text":"function generate mean functions variable","code":""},{"path":"https://bpark67.github.io/FunOnFun/reference/dot-generate_mu.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function to generate mean functions for each variable — .generate_mu","text":"","code":".generate_mu(t, func_list)"},{"path":"https://bpark67.github.io/FunOnFun/reference/dot-generate_mu.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function to generate mean functions for each variable — .generate_mu","text":"t vector time points func_list list functions generate mean functions","code":""},{"path":"https://bpark67.github.io/FunOnFun/reference/dot-generate_mu.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function to generate mean functions for each variable — .generate_mu","text":"t num.var matrix mean functions","code":""},{"path":"https://bpark67.github.io/FunOnFun/reference/dot-generate_phi.html","id":null,"dir":"Reference","previous_headings":"","what":"A function to generate orthogonal eigenfunctions — .generate_phi","title":"A function to generate orthogonal eigenfunctions — .generate_phi","text":"function generate orthogonal eigenfunctions","code":""},{"path":"https://bpark67.github.io/FunOnFun/reference/dot-generate_phi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function to generate orthogonal eigenfunctions — .generate_phi","text":"","code":".generate_phi(t, eigen_funs)"},{"path":"https://bpark67.github.io/FunOnFun/reference/dot-generate_phi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function to generate orthogonal eigenfunctions — .generate_phi","text":"t vector time points eigen_funs list functions generate eigenfunctions; Length match number components","code":""},{"path":"https://bpark67.github.io/FunOnFun/reference/dot-generate_phi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function to generate orthogonal eigenfunctions — .generate_phi","text":"t number components matrix eigenfunctions inner product length t * \\(I_n\\)","code":""},{"path":"https://bpark67.github.io/FunOnFun/reference/dot-generate_xi.html","id":null,"dir":"Reference","previous_headings":"","what":"A function to generate orthonormal eigenscores — .generate_xi","title":"A function to generate orthonormal eigenscores — .generate_xi","text":"function generate orthonormal eigenscores","code":""},{"path":"https://bpark67.github.io/FunOnFun/reference/dot-generate_xi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function to generate orthonormal eigenscores — .generate_xi","text":"","code":".generate_xi(n, components)"},{"path":"https://bpark67.github.io/FunOnFun/reference/dot-generate_xi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function to generate orthonormal eigenscores — .generate_xi","text":"n Number subjects components Number components","code":""},{"path":"https://bpark67.github.io/FunOnFun/reference/dot-generate_xi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function to generate orthonormal eigenscores — .generate_xi","text":"n length(t) matrix orthogonal eigenscores inner product \\(n \\times I_n\\)","code":""},{"path":"https://bpark67.github.io/FunOnFun/reference/dot-longFormat.html","id":null,"dir":"Reference","previous_headings":"","what":"A function to convert a data frame into a long format — .longFormat","title":"A function to convert a data frame into a long format — .longFormat","text":"function convert data frame long format","code":""},{"path":"https://bpark67.github.io/FunOnFun/reference/dot-longFormat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function to convert a data frame into a long format — .longFormat","text":"","code":".longFormat(dat)"},{"path":"https://bpark67.github.io/FunOnFun/reference/dot-longFormat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function to convert a data frame into a long format — .longFormat","text":"dat data frame data","code":""},{"path":"https://bpark67.github.io/FunOnFun/reference/dot-longFormat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function to convert a data frame into a long format — .longFormat","text":"data frame long format","code":""},{"path":"https://bpark67.github.io/FunOnFun/reference/dot-normalizer.html","id":null,"dir":"Reference","previous_headings":"","what":"A function to normalize a matrix — .normalizer","title":"A function to normalize a matrix — .normalizer","text":"function normalize matrix","code":""},{"path":"https://bpark67.github.io/FunOnFun/reference/dot-normalizer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function to normalize a matrix — .normalizer","text":"","code":".normalizer(mat, normal = NULL)"},{"path":"https://bpark67.github.io/FunOnFun/reference/dot-normalizer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function to normalize a matrix — .normalizer","text":"mat matrix normal scalar normalize matrix. Default number rows matrix","code":""},{"path":"https://bpark67.github.io/FunOnFun/reference/dot-normalizer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function to normalize a matrix — .normalizer","text":"matrix normalized inner product \\(normal*I_n\\)","code":""},{"path":"https://bpark67.github.io/FunOnFun/reference/dot-stack_phi.html","id":null,"dir":"Reference","previous_headings":"","what":"A function to stack multiple eigenfunctions if there are multiple variables — .stack_phi","title":"A function to stack multiple eigenfunctions if there are multiple variables — .stack_phi","text":"function stack multiple eigenfunctions multiple variables","code":""},{"path":"https://bpark67.github.io/FunOnFun/reference/dot-stack_phi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function to stack multiple eigenfunctions if there are multiple variables — .stack_phi","text":"","code":".stack_phi(t, eigen_funs_list)"},{"path":"https://bpark67.github.io/FunOnFun/reference/dot-stack_phi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function to stack multiple eigenfunctions if there are multiple variables — .stack_phi","text":"t vector time points eigen_funs_list list lists functions generate eigenfunctions variable","code":""},{"path":"https://bpark67.github.io/FunOnFun/reference/dot-stack_phi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function to stack multiple eigenfunctions if there are multiple variables — .stack_phi","text":"stacked matrix eigenfunctions","code":""},{"path":"https://bpark67.github.io/FunOnFun/reference/dot-vector_filler.html","id":null,"dir":"Reference","previous_headings":"","what":"A function to fill an empty vector with values from a data frame — .vector_filler","title":"A function to fill an empty vector with values from a data frame — .vector_filler","text":"function fill empty vector values data frame","code":""},{"path":"https://bpark67.github.io/FunOnFun/reference/dot-vector_filler.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function to fill an empty vector with values from a data frame — .vector_filler","text":"","code":".vector_filler(v, target, source, id_col, uid)"},{"path":"https://bpark67.github.io/FunOnFun/reference/dot-vector_filler.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function to fill an empty vector with values from a data frame — .vector_filler","text":"v vector fill target target column fill source source data frame id_col column contains unique identifier subject uid unique identifier subject","code":""},{"path":"https://bpark67.github.io/FunOnFun/reference/dot-vector_filler.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function to fill an empty vector with values from a data frame — .vector_filler","text":"filled vector","code":""},{"path":"https://bpark67.github.io/FunOnFun/reference/fpcaFormat.html","id":null,"dir":"Reference","previous_headings":"","what":"A function to format data for FPCA — fpcaFormat","title":"A function to format data for FPCA — fpcaFormat","text":"function format data FPCA","code":""},{"path":"https://bpark67.github.io/FunOnFun/reference/fpcaFormat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function to format data for FPCA — fpcaFormat","text":"","code":"fpcaFormat(dat, id_col)"},{"path":"https://bpark67.github.io/FunOnFun/reference/fpcaFormat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function to format data for FPCA — fpcaFormat","text":"dat data frame data id_col Designates column contains unique identifier subject","code":""},{"path":"https://bpark67.github.io/FunOnFun/reference/fpcaFormat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function to format data for FPCA — fpcaFormat","text":"tibble data FPCA format","code":""},{"path":"https://bpark67.github.io/FunOnFun/reference/irregMFPCA.html","id":null,"dir":"Reference","previous_headings":"","what":"A function to perform irregular MFPCA — irregMFPCA","title":"A function to perform irregular MFPCA — irregMFPCA","text":"function perform irregular MFPCA","code":""},{"path":"https://bpark67.github.io/FunOnFun/reference/irregMFPCA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function to perform irregular MFPCA — irregMFPCA","text":"","code":"irregMFPCA(components = NULL, split = F, ...)"},{"path":"https://bpark67.github.io/FunOnFun/reference/irregMFPCA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function to perform irregular MFPCA — irregMFPCA","text":"components Number principal components consider split Whether split data separate variables ... list FPCA objects","code":""},{"path":"https://bpark67.github.io/FunOnFun/reference/irregMFPCA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function to perform irregular MFPCA — irregMFPCA","text":"list containing unstacked (wide) eigenfunctions, stacked (long) eigenfunctions, eigenscores, Dhat, Xhat","code":""},{"path":"https://bpark67.github.io/FunOnFun/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://bpark67.github.io/FunOnFun/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://bpark67.github.io/FunOnFun/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://bpark67.github.io/FunOnFun/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling `rhs(lhs)`.","code":""},{"path":"https://bpark67.github.io/FunOnFun/reference/simMFPCA.html","id":null,"dir":"Reference","previous_headings":"","what":"A function to generate randomly simulated data for multivariate functional principal component analysis — simMFPCA","title":"A function to generate randomly simulated data for multivariate functional principal component analysis — simMFPCA","text":"function generate randomly simulated data multivariate functional principal component analysis","code":""},{"path":"https://bpark67.github.io/FunOnFun/reference/simMFPCA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function to generate randomly simulated data for multivariate functional principal component analysis — simMFPCA","text":"","code":"simMFPCA(   seed,   t,   n,   components,   mean_funs,   eigen_funs_list,   lambdas,   response = FALSE,   B = NULL )"},{"path":"https://bpark67.github.io/FunOnFun/reference/simMFPCA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function to generate randomly simulated data for multivariate functional principal component analysis — simMFPCA","text":"seed seed random number generation t vector time points n Number subjects components Number principal components mean_funs list functions generate mean functions variable eigen_funs_list list lists functions generate eigenfunctions variable lambdas vector magnitudes eigenvalues response logical indicating whether data response covariate B matrix regression coefficients response data","code":""},{"path":"https://bpark67.github.io/FunOnFun/reference/simMFPCA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function to generate randomly simulated data for multivariate functional principal component analysis — simMFPCA","text":"list simulated data","code":""},{"path":"https://bpark67.github.io/FunOnFun/reference/simMiss.html","id":null,"dir":"Reference","previous_headings":"","what":"A function to simulate missing data — simMiss","title":"A function to simulate missing data — simMiss","text":"function simulate missing data","code":""},{"path":"https://bpark67.github.io/FunOnFun/reference/simMiss.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function to simulate missing data — simMiss","text":"","code":"simMiss(n_obs, dat, t = seq(0, 1, length.out = 51), seed = 51)"},{"path":"https://bpark67.github.io/FunOnFun/reference/simMiss.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function to simulate missing data — simMiss","text":"n_obs Number observations keep dat matrix data t vector time points seed seed random number generation","code":""},{"path":"https://bpark67.github.io/FunOnFun/reference/simMiss.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function to simulate missing data — simMiss","text":"matrix data missing values","code":""},{"path":"https://bpark67.github.io/FunOnFun/reference/tibbleFormat.html","id":null,"dir":"Reference","previous_headings":"","what":"A function to convert a matrix into a tibble — tibbleFormat","title":"A function to convert a matrix into a tibble — tibbleFormat","text":"function convert matrix tibble","code":""},{"path":"https://bpark67.github.io/FunOnFun/reference/tibbleFormat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function to convert a matrix into a tibble — tibbleFormat","text":"","code":"tibbleFormat(dat, t)"},{"path":"https://bpark67.github.io/FunOnFun/reference/tibbleFormat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function to convert a matrix into a tibble — tibbleFormat","text":"dat matrix data t vector time points","code":""},{"path":"https://bpark67.github.io/FunOnFun/reference/tibbleFormat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function to convert a matrix into a tibble — tibbleFormat","text":"tibble data","code":""}]
